###
### --------------------------------------------------
### VanTosh Shinken Host File
### (c) copyleft 2013 VanTosh
### Author: Toshaan Bharvani <toshaan@vantosh.com>
### --------------------------------------------------
### {{ ansible_managed }}
###
### --------------------------------------------------
{% if ddns is defined %}
### {{ ddns.hostname }}.{{ ddns.domain }}
{% else  %}
### {{ ansible_ssh_host }}
{% endif %}
### fqdn: {{ ansible_fqdn }}
### ansible: {{ inventory_hostname }}
### --------------------------------------------------
###


define host {
{% if nrpe.type is defined %}
    use                     {{ nrpe.type }}
{% else %}
    use                     linux-server
{% endif %}
    host_name               {{ inventory_hostname }}.{{ domain }}
    alias                   {{ inventory_hostname }}
    address                 {{ nrpe.address }}
{% if nrpe.realm is defined %}
    realm                   {{ nrpe.realm }}
{% else %}
    realm                   All
{% endif %}
{% if ansible_virtualization_role is defined %}
{% if hyper is not defined and ansible_virtualization_role == 'host' %}
    icon_set                server
{% elif hyper is defined and ansible_virtualization_role == 'guest' %}
    parents                 {{ hyper }}.{{ domain }}
{% endif %}
{% endif %}
{% if nrpe.contact is defined %}
    contact_groups          {{ nrpe.contact }}
{% endif %}
}
define service {
    use                     generic-service
    host_name               {{ inventory_hostname }}.{{ domain }}
    service_description     PING
    check_command           check_ping
}
define service {
    use                     generic-service
    host_name               {{ inventory_hostname }}.{{ domain }}
    service_description     SSH
    check_command           check_ssh!{{ ansible_ssh_port }}
    notifications_enabled   1
}
{% for location in ansible_mounts %}
{% if location.fstype != 'cifs' and location.fstype != 'nfs' and location.fstype != 'fuse' %}
define service {
    use                     generic-service
    host_name               {{ inventory_hostname }}.{{ domain }}
    service_description     Partition {{ location.mount }}
    check_command           check_nrpe!check_disk_{{ location.mount }}
    icon_set                disk
}
{% endif %}
{% endfor %}
define service {
    use                     generic-service
    host_name               {{ inventory_hostname }}.{{ domain }}
    service_description     CurrentUsers
    check_command           check_nrpe!check_users
}
define service {
    use                     generic-service
    host_name               {{ inventory_hostname }}.{{ domain }}
    service_description     TotalProcesses
    check_command           check_nrpe!check_total_procs
}
define service {
    use                     generic-service
    host_name               {{ inventory_hostname }}.{{ domain }}
    service_description     CurrentLoad
    check_command           check_nrpe!check_load
}
define service {
    use                     generic-service
    host_name               {{ inventory_hostname }}.{{ domain }}
    service_description     SwapUsage
    check_command           check_nrpe!check_swap
}
{% for disk in ansible_devices %}
{% if disk != 'sr0' %}
define service {
    use                     generic-service
    host_name               {{ inventory_hostname }}.{{ domain }}
    service_description     IOstat {{ disk }}
    check_command           check_nrpe!check_iostat_{{ disk }}
}
{% endif %}
{% endfor %}
{% if nagios_services is defined %}
{% if nagios_services.http is defined %}
define service {
    use                     generic-service
    host_name               {{ inventory_hostname }}.{{ domain }}
    service_description     HTTP
    check_command           check_http!{{ nagios_services.http }}
    notifications_enabled   1
}
{% endif %}
{% if nagios_services.https is defined %}
define service {
    use                     generic-service
    host_name               {{ inventory_hostname }}.{{ domain }}
    service_description     HTTPS
    check_command           check_https!{{ nagios_services.https }}
    notifications_enabled   1
}
{% endif %}
{% if nagios_services.https is defined and nagios_services.httpscert is defined %}
define service {
    use                     generic-service
    host_name               {{ inventory_hostname }}.{{ domain }}
    service_description     HTTPS_CERT
    check_command           check_https_certificate!{{ nagios_services.https }}!{{ nagios_services.httpscert }}
    notifications_enabled   1
}
{% endif %}
{% if nagios_services.smtp is defined %}
#define service {
#    use                     generic-service
#    host_name               {{ inventory_hostname }}.{{ domain }}
#    service_description     SMTP
#    check_command           check_smtp!{{ nagios_services.smtp }}
#    notifications_enabled   1
#}
{% endif %}
{% if nagios_services.smtpssl is defined %}
define service {
    use                     generic-service
    host_name               {{ inventory_hostname }}.{{ domain }}
    service_description     SMTPSSL
    check_command           check_smtp_ssl!{{ nagios_services.smtpssl }}
    notifications_enabled   1
}
{% endif %}
{% if nagios_services.smtpssl is defined and nagios_services.smtpsslcert is defined %}
define service {
    use                     generic-service
    host_name               {{ inventory_hostname }}.{{ domain }}
    service_description     SMTPSSL_CERT
    check_command           check_smtp_ssl_cert!{{ nagios_services.smtpssl }}!{{ nagios_services.smtpsslcert }}
}
{% endif %}
{% if nagios_services.smtptls is defined %}
define service {
    use                     generic-service
    host_name               {{ inventory_hostname }}.{{ domain }}
    service_description     SMTPTLS
    check_command           check_smtp_tls!{{ nagios_services.smtptls }}
    notifications_enabled   1
}
{% endif %}
{% if nagios_services.smtptls is defined and nagios_services.smtptlscert is defined %}
define service {
    use                     generic-service
    host_name               {{ inventory_hostname }}.{{ domain }}
    service_description     SMTPTLS_CERT
    check_command           check_smtp_tls_cert!{{ nagios_services.smtptls }}!{{ nagios_services.smtptlscert }}
}
{% endif %}
{% if nagios_services.imap4ssl is defined %}
define service {
    use                     generic-service
    host_name               {{ inventory_hostname }}.{{ domain }}
    service_description     IMAP4SSL
    check_command           check_imap_ssl!{{ nagios_services.imap4ssl }}
    notifications_enabled   1
}
{% endif %}
{% if nagios_services.imap4ssl is defined and nagios_services.imap4sslcert is defined %}
define service {
    use                     generic-service
    host_name               {{ inventory_hostname }}.{{ domain }}
    service_description     IMAP4SSL_CERT
    check_command           check_imap_ssl_cert!{{ nagios_services.imap4ssl }}!{{ nagios_services.imap4sslcert }}
}
{% endif %}
{% if nagios_services.pop3ssl is defined %}
define service {
    use                     generic-service
    host_name               {{ inventory_hostname }}.{{ domain }}
    service_description     POP3SSL
    check_command           check_pop_ssl!{{ nagios_services.pop3ssl }}
    notifications_enabled   1
}
{% endif %}
{% if nagios_services.pop3ssl is defined and nagios_services.pop3sslcert is defined %}
define service {
    use                     generic-service
    host_name               {{ inventory_hostname }}.{{ domain }}
    service_description     POP3SSL_CERT
    check_command           check_pop_ssl_cert!{{ nagios_services.pop3ssl }}!{{ nagios_services.pop3sslcert }}
}
{% endif %}
{% if nagios_services.tcp is defined %}
#{{ nagios_services.tcp }}
{% for line in nagios_services.tcp %}
#{{ line }}
define service {
    use                     generic-service
    host_name               {{ inventory_hostname }}.{{ domain }}
    service_description     {{ line.name }}
    check_command           check_tcp!{{ line.port }}
    {% if line.notification is defined %}
    notifications_enabled   {{ line.notification }}
    {% endif %}
    icon_set                network_service
}
{% endfor %}
{% endif %}
{% endif %}
